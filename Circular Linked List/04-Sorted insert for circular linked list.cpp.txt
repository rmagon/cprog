#include <iostream>
using namespace std;

struct node
{
	int a;
	struct node* next;
};

void insert(struct node** head,int data)
{
	struct node* looper = *head;
	struct node* temp = (struct node*)malloc(sizeof(struct node));
	temp->a = data;
	temp->next = NULL;
	if((*head) == NULL)
	{
		(*head) = temp;
		return;
	}
	else
	{
		while(looper->next!=NULL)
		{
			looper = looper->next;
		}
		looper->next = temp;
		return;
	}
}

void print(struct node* head)
{
	struct node* first = head;
	if(head!=NULL)
	{
	do
	{
		printf("%d ",head->a);
		head = head->next;
	}while(head!=first);
	}
	printf("\n");
}

void sortedInsert(struct node** head,int k)
{
	struct node* temp = (struct node*)malloc(sizeof(struct node));
	temp->a  = k;
	if((*head)->a > k)
	{
		struct node* back = *head;
		struct node* looper = (*head)->next;
		while(looper!=*head)
		{
			back = looper;
			looper = looper->next;
		}
		temp->next = (*head);
		(*head) = temp;
		back->next = *head;
	}
	else
	{
		struct node* back = *head;
		struct node* looper = (*head)->next;
		while((looper->a < k)&&(looper!=(*head)))
		{
			back = looper;
			looper = looper->next;
		}
		back->next = temp;
		temp->next = looper;
	}
}

int main() {
	struct node* head = NULL;
	struct node* head2= NULL;
	insert(&head,10);
	insert(&head,20);
	insert(&head,30);
	insert(&head,40);
	head->next->next->next->next = head;
	print(head);
	sortedInsert(&head,25);
	print(head);
	sortedInsert(&head,5);
	print(head);
	return 0;
}